#!/bin/sh /etc/rc.common

START=99
STOP=10

USE_PROCD=1
PROG=/usr/bin/openwrt-reporter.py
PIDFILE=/var/run/openwrt-reporter.pid

# Configuration
# Set VERBOSE=1 in /etc/config/openwrt-reporter for debug output
config_load openwrt-reporter 2>/dev/null || true

start_service() {
    local verbose_arg=""
    
    # Load UCI configuration
    config_load openwrt-reporter 2>/dev/null || true
    
    # Check if service is enabled
    local enabled
    config_get enabled global enabled 1
    [ "$enabled" = "0" ] && {
        echo "OpenWRT Reporter is disabled in configuration"
        return 1
    }
    
    # Check verbose setting
    local verbose_enabled
    config_get verbose_enabled global verbose 0
    [ "$verbose_enabled" = "1" ] && verbose_arg="--verbose"
    
    procd_open_instance
    procd_set_param command python3 "$PROG" $verbose_arg
    procd_set_param pidfile "$PIDFILE"
    procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param user root
    procd_close_instance
}

stop_service() {
    # Graceful shutdown - send SIGTERM to allow proper cleanup
    [ -f "$PIDFILE" ] && {
        PID=$(cat "$PIDFILE")
        [ -n "$PID" ] && kill -TERM "$PID" 2>/dev/null
        sleep 2
        # Force kill if still running
        [ -d "/proc/$PID" ] && kill -KILL "$PID" 2>/dev/null
        rm -f "$PIDFILE"
    }
}

reload_service() {
    stop
    start
}

service_triggers() {
    procd_add_reload_trigger "network"
}
